list-u8-param: function(x: list<u8>)
list-u16-param: function(x: list<u16>)
list-u32-param: function(x: list<u32>)
list-u64-param: function(x: list<u64>)
list-s8-param: function(x: list<s8>)
list-s16-param: function(x: list<s16>)
list-s32-param: function(x: list<s32>)
list-s64-param: function(x: list<s64>)
list-float32-param: function(x: list<float32>)
list-float64-param: function(x: list<float64>)

list-u8-ret: function() -> list<u8>
list-u16-ret: function() -> list<u16>
list-u32-ret: function() -> list<u32>
list-u64-ret: function() -> list<u64>
list-s8-ret: function() -> list<s8>
list-s16-ret: function() -> list<s16>
list-s32-ret: function() -> list<s32>
list-s64-ret: function() -> list<s64>
list-float32-ret: function() -> list<float32>
list-float64-ret: function() -> list<float64>

tuple-list: function(x: list<tuple<u8, s8>>) -> list<tuple<s64, u32>>
string-list-arg: function(a: list<string>)
string-list-ret: function() -> list<string>
tuple-string-list: function(x: list<tuple<u8, string>>) -> list<tuple<string, u8>>
string-list: function(x: list<string>) -> list<string>

record some-record {
  x: string,
  y: other-record,
  z: list<other-record>,
  c1: u32,
  c2: u64,
  c3: s32,
  c4: s64,
}
record other-record {
  a1: u32,
  a2: u64,
  a3: s32,
  a4: s64,
  b: string,
  c: list<u8>,
}
record-list: function(x: list<some-record>) -> list<other-record>
record-list-reverse: function(x: list<other-record>) -> list<some-record>

variant some-variant {
  a(string),
  b,
  c(u32),
  d(list<other-variant>),
}
variant other-variant {
  a,
  b(u32),
  c(string),
}
variant-list: function(x: list<some-variant>) -> list<other-variant>

type load-store-all-sizes = list<tuple<
  string,
  u8,
  s8,
  u16,
  s16,
  u32,
  s32,
  u64,
  s64,
  float32,
  float64,
  char,
>>
load-store-everything: function(a: load-store-all-sizes) -> load-store-all-sizes
