tuple-arg: func(x: tuple<char, u32>)
tuple-result: func() -> tuple<char, u32>

record empty {}

empty-arg: func(x: empty)
empty-result: func() -> empty

record scalars {
    a: u32,
    b: u32,
}

scalar-arg: func(x: scalars)
scalar-result: func() -> scalars

record really-flags {
    a: bool,
    b: bool,
    c: bool,
    d: bool,
    e: bool,
    f: bool,
    g: bool,
    h: bool,
    i: bool,
}

flags-arg: func(x: really-flags)
flags-result: func() -> really-flags

record aggregates {
    a: scalars,
    b: u32,
    c: empty,
    d: string,
    e: really-flags,
}

aggregate-arg: func(x: aggregates)
aggregate-result: func() -> aggregates

type tuple-typedef = tuple<s32>
type int-typedef = s32
type tuple-typedef2 = tuple<int-typedef>
typedef-inout: func(e: tuple-typedef2) -> s32
