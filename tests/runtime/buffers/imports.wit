buffer-u8: function(a: pull-buffer<u8>, b: push-buffer<u8>) -> u32
buffer-u32: function(a: pull-buffer<u32>, b: push-buffer<u32>) -> u32
buffer-bool: function(a: pull-buffer<bool>, b: push-buffer<bool>) -> u32

/*
(export "buffer-string" (func (param $a (in-buffer string)) (param $b (out-buffer string)) (result $r u32)))
(export "buffer-list-bool" (func (param $a (in-buffer (list bool))) (param $b (out-buffer (list bool))) (result $r u32)))
(export "buffer-buffer-bool" (func (param $a (in-buffer (in-buffer bool)))))
*/

buffer-mutable1: function(a: list<pull-buffer<bool>>)
buffer-mutable2: function(a: list<push-buffer<u8>>) -> u32
buffer-mutable3: function(a: list<push-buffer<bool>>) -> u32

variant buffer-in-variant {
  a(push-buffer<u8>),
  b(pull-buffer<u8>),
  c(push-buffer<bool>),
  d(pull-buffer<bool>),
}

record buffer-in-record {
  a: push-buffer<u8>,
  b: pull-buffer<u8>,
  c: push-buffer<bool>,
  d: pull-buffer<bool>,
  e: buffer-in-variant,
}
buffer-in-record: function(a: buffer-in-record)

type param-in-buffer-u8 = push-buffer<u8>
type param-out-buffer-u8 = pull-buffer<u8>
type param-in-buffer-bool = push-buffer<bool>
type param-out-buffer-bool = pull-buffer<bool>
buffer-typedef: function(a: param-in-buffer-u8, b: param-out-buffer-u8, c: param-in-buffer-bool, d: param-out-buffer-bool)

