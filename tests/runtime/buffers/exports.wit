test-imports: function()

variant buffer-in-variant {
  a(push-buffer<u8>),
  b(pull-buffer<u8>),
  c(push-buffer<bool>),
  d(pull-buffer<bool>),
}

record buffer-in-record {
  a: push-buffer<u8>,
  b: pull-buffer<u8>,
  c: push-buffer<bool>,
  d: pull-buffer<bool>,
  e: buffer-in-variant,
}

type param-in-buffer-u8 = push-buffer<u8>
type param-out-buffer-u8 = pull-buffer<u8>
type param-in-buffer-bool = push-buffer<bool>
type param-out-buffer-bool = pull-buffer<bool>


/* TODO
;; ===========================================
;; buffers
;; ===========================================
(export "buffer-u8" (func (param $a (in-buffer u8)) (param $b (out-buffer u8)) (result $r u32)))
(export "buffer-u32" (func (param $a (in-buffer u32)) (param $b (out-buffer u32)) (result $r u32)))
(export "buffer-bool" (func (param $a (in-buffer bool)) (param $b (out-buffer bool)) (result $r u32)))
(export "buffer-string" (func (param $a (in-buffer string)) (param $b (out-buffer string)) (result $r u32)))
(export "buffer-list-bool" (func (param $a (in-buffer (list bool))) (param $b (out-buffer (list bool))) (result $r u32)))
;; TODO: somehow get this working in wasmtime
;;(export "buffer-buffer-bool" (func (param $a (in-buffer (in-buffer bool)))))
(export "buffer-mutable1" (func (param $a (list (in-buffer bool)))))
(export "buffer-mutable2" (func (param $a (list (out-buffer u8))) (result $r u32)))
(export "buffer-mutable3" (func (param $a (list (out-buffer bool))) (result $r u32)))
(export "buffer-in-record" (func (param $a $buffer-in-record)))
(export "buffer-typedef" (func
  (param $a $param-in-buffer-u8)
  (param $b $param-out-buffer-u8)
  (param $c $param-in-buffer-bool)
  (param $d $param-out-buffer-bool)
))
*/

