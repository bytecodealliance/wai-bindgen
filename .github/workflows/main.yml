name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
defaults:
  run:
    shell: bash

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable --no-self-update && rustup default stable
    - name: Install wasm32-unknown-unknown target
      run: rustup target add wasm32-unknown-unknown
    - name: Install wasm32-wasi target
      run: rustup target add wasm32-wasi

    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-linux.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if : matrix.os == 'ubuntu-latest'
    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-macos.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if : matrix.os == 'macos-latest'
    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-mingw.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if : matrix.os == 'windows-latest'

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'adopt'

    # As of this writing, the above Java/Maven combo isn't working on Windows, so we install them manually:
    - run: |
        curl https://download.java.net/java/GA/jdk19.0.2/fdb695a9d9064ad6b064dc6df578380c/7/GPL/openjdk-19.0.2_windows-x64_bin.zip -LO
        unzip openjdk-19.0.2_windows-x64_bin.zip
        curl https://dlcdn.apache.org/maven/maven-3/3.9.0/binaries/apache-maven-3.9.0-bin.tar.gz -L | tar xzvf -
        PATH=`pwd`/jdk-19.0.2/bin:`pwd`/apache-maven-3.9.0/bin:$PATH cargo test --workspace
      if : matrix.os == 'windows-latest'
    - run: cargo test --workspace
      if : matrix.os != 'windows-latest'

    - run: cargo build
    - run: cargo build --no-default-features
    - run: cargo build --no-default-features --features rust
    - run: cargo build --no-default-features --features c
    - run: cargo build --no-default-features --features teavm-java
    - run: cargo build --no-default-features --features markdown


  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Format source code
      run: cargo fmt -- --check
