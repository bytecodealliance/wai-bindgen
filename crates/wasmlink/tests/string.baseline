(module
  (type (;0;) (func (param i32 i32 i32)))
  (type (;1;) (func (param i32 i32 i32 i32) (result i32)))
  (import "$parent" "memory" (memory (;0;) 0))
  (import "$parent" "canonical_abi_realloc" (func (;0;) (type 1)))
  (module (;0;)
    (type (;0;) (func (param i32 i32 i32 i32) (result i32)))
    (type (;1;) (func (param i32 i32 i32)))
    (type (;2;) (func (param i32 i32) (result i32)))
    (func (;0;) (type 0) (param i32 i32 i32 i32) (result i32)
      unreachable)
    (func (;1;) (type 1) (param i32 i32 i32)
      unreachable)
    (func (;2;) (type 2) (param i32 i32) (result i32)
      unreachable)
    (memory (;0;) 0)
    (export "memory" (memory 0))
    (export "canonical_abi_realloc" (func 0))
    (export "canonical_abi_free" (func 1))
    (export "f1" (func 2)))
  (instance (;1;)
    (instantiate 0))
  (alias 1 "memory" (memory (;1;)))
  (alias 1 "canonical_abi_realloc" (func (;1;)))
  (alias 1 "canonical_abi_free" (func (;2;)))
  (alias 1 "f1" (func (;3;)))
  (func (;4;) (type 0) (param i32 i32 i32)
    (local i32 i32 i32 i32)
    block  ;; label = @1
      i32.const 0
      i32.const 0
      i32.const 1
      local.get 1
      call 1
      local.tee 3
      br_if 0 (;@1;)
      unreachable
    end
    local.get 3
    local.get 0
    local.get 1
    memory.copy 1 0
    local.get 3
    local.get 1
    call 3
    local.set 4
    local.get 2
    local.get 4
    i32.const 8
    memory.copy 0 1
    local.get 4
    i32.load (memory 1)
    local.set 5
    block  ;; label = @1
      i32.const 0
      i32.const 0
      i32.const 1
      local.get 4
      i32.load (memory 1) offset=4
      call 0
      local.tee 6
      br_if 0 (;@1;)
      unreachable
    end
    local.get 6
    local.get 5
    local.get 4
    i32.load (memory 1) offset=4
    memory.copy 0 1
    local.get 2
    local.get 6
    i32.store
    local.get 4
    i32.load (memory 1)
    local.get 4
    i32.load (memory 1) offset=4
    i32.const 1
    call 2)
  (export "memory" (memory 1))
  (export "canonical_abi_realloc" (func 1))
  (export "canonical_abi_free" (func 2))
  (export "f1" (func 4)))
