(component
  (type (;0;) (record))
  (type (;1;) (record (field "a" u32) (field "b" u32)))
  (type (;2;) (flags "a" "b" "c" "d" "e" "f" "g" "h" "i"))
  (type (;3;) (record (field "a" 1) (field "b" u32) (field "c" 0) (field "d" string) (field "e" 2)))
  (type (;4;) s32)
  (type (;5;) (tuple 4))
  (type (;6;) (tuple char u32))
  (type (;7;) (func (param "x" 6)))
  (type (;8;) (func (result 6)))
  (type (;9;) (func (param "x" 0)))
  (type (;10;) (func (result 0)))
  (type (;11;) (func (param "x" 1)))
  (type (;12;) (func (result 1)))
  (type (;13;) (func (param "x" 2)))
  (type (;14;) (func (result 2)))
  (type (;15;) (func (param "x" 3)))
  (type (;16;) (func (result 3)))
  (type (;17;) (func (param "e" 5) (result s32)))
  (type (;18;) 
    (instance
      (alias outer 1 0 (type (;0;)))
      (export "empty"  (type (eq 0)))
      (alias outer 1 1 (type (;1;)))
      (export "scalars"  (type (eq 1)))
      (alias outer 1 2 (type (;2;)))
      (export "really-flags"  (type (eq 2)))
      (alias outer 1 3 (type (;3;)))
      (export "aggregates"  (type (eq 3)))
      (alias outer 1 4 (type (;4;)))
      (export "int-typedef"  (type (eq 4)))
      (alias outer 1 5 (type (;5;)))
      (export "tuple-typedef2"  (type (eq 5)))
      (alias outer 1 7 (type (;6;)))
      (export "tuple-arg" (func (type 6)))
      (alias outer 1 8 (type (;7;)))
      (export "tuple-result" (func (type 7)))
      (alias outer 1 9 (type (;8;)))
      (export "empty-arg" (func (type 8)))
      (alias outer 1 10 (type (;9;)))
      (export "empty-result" (func (type 9)))
      (alias outer 1 11 (type (;10;)))
      (export "scalar-arg" (func (type 10)))
      (alias outer 1 12 (type (;11;)))
      (export "scalar-result" (func (type 11)))
      (alias outer 1 13 (type (;12;)))
      (export "flags-arg" (func (type 12)))
      (alias outer 1 14 (type (;13;)))
      (export "flags-result" (func (type 13)))
      (alias outer 1 15 (type (;14;)))
      (export "aggregate-arg" (func (type 14)))
      (alias outer 1 16 (type (;15;)))
      (export "aggregate-result" (func (type 15)))
      (alias outer 1 17 (type (;16;)))
      (export "typedef-inout" (func (type 16)))
    )
  )
  (import "records" (instance (;0;) (type 18)))
)